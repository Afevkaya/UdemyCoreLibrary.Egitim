{
  // Aşağıdaki adreste aspnetcore ratelimite kütüphanesine ait bütün bilgiler bulunmaktadır.
  // https://github.com/stefanprodan/AspNetCoreRateLimit/wiki/IpRateLimitMiddleware#setup.
  // Genel Ip ve endpointler için genel limitler yazdığımız kısım.
  "IpRateLimiting": {
    // Kullanıcı belirlenen limiti aşınca kullanıcıya dönülecek data.
    "QuotaExceededResponse": {
      "Content": "{{ \"message\": \"istek limiti asilmistir.\", \"details\": \"kota asildi. {1} basina {0} istek yapabilirsiniz. lutfen {2} saniye icerisinde tekrar deneyiniz.\" }}",
      "ContentType": "application/json",
      "StatusCode": 429
    },
    // Her endpoint için tek tek sınırlamalar belirleyip belirleyeceğimizi sağlar.
    "EnableEndpointRateLimiting": true,
    // Bir endpointe yapılan geçersiz isteklerin total de bulunan istekten düşürülüp düşürülmeyeceğini sağlar.
    "StackBlockedRequests": false,
    // Kullanıcı belirli limiti açtıktıktan sonra kullanıcıya dönülecek Status Code beliriyoruz.
    "HttpStatusCode": 429,
    // Genel olarak koyduğumuz kurallardan muaf tutulacak Ip adreslerini belirtiriz.
    // Windows 10 IpV6 kullanıyor. Bu yüzden kendi Ip adresimizi muaf tutmak istersek belirtmemiz gerekli.
    // "IpWhiteList": [
    //   "127.0.0.1"
    // ],
    "ClientIdHeader": "X-ClientId",
    // Genel olarak koyduğumuz kurallardan muaf tutulacak Clientları belirtiriz.
    "ClientWhiteList": [
      "Client-1"
    ],
    
    // Genel olarak koyduğumuz kurallardan muaf tutulacak endpointleri belirtiriz.
    "EndpointWhiteList": [
      "put:/api/products"
    ],
    // Genel Kurallar.
    // Her controller, her endpoitn için ayrı ayrı limitler koyabiliriz.
    // Hatta bir controller için birden fazla limit koyabiliriz.
    // Paremtre alan url ler içinde bir limit belirleyebiliriz.
    "GeneralRules": [
      {
        "Endpoint": "*:/api/products",
        "Period": "20s",
        "Limit": 3
      },
      {
        "Endpoint": "*:/api/products",
        "Period": "1h",
        "Limit": 100
      },
      {
        "Endpoint": "POST:/api/products",
        "Period": "10s",
        "Limit": 2
      },
      {
        "Endpoint": "*:/api/products/*",
        "Period": "30s",
        "Limit": 5
      },
      {
        "Endpoint": "*:/api/categories",
        "Period": "30s",
        "Limit": 5
      },
      {
        "Endpoint": "*:/api/categories",
        "Period": "1d",
        "Limit": 500
      }
    ]
  },
  // Spesifik Ip ler için limitler belirlediğimiz kısım.
  // Bu kısımda belirlediğimiz limitler genel kısım daki ile çakışıyor ise hangisinin zaman biçiminden kapsamı dar ise onun kuralı geçerlidir.
  // Eğer ikisininki de zamansal olarak aynı ise IpRateLimitPolicies içindeki kural/lar geçerli sayılacaktır.
 // "IpRateLimitPolicies": {
 //   "IpRules": {
 //     "Ip": "::1",
 //     "Rules": [
 //       {
 //         "Endpoint": "*:/api/products",
 //         "Period": "30s",
 //         "Limit": 5
 //       }
 //     ]
 //   }
 // },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*"
}
